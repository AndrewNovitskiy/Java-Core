public class Question { 
    private Type type; 
 
    public Type getType() { return type; } 
    public void setType(Type type) { this.type = type; } 
 
    public static enum Type { 
        SINGLE_CHOICE, MULIT_CHOICE, TEXT 
    } 
} 



public class Users { 
    ... 
    public class Query { 
        private Query() { ... } 
        public void setLogin(String login) { ... } 
        public void setCreationDate(Date date) { ... } 
        public List<User> list() { ... } 
        public User single() { ... } 
    } 
 
    public Query createQuery() { return new Query(); } 
} 


public class Handler { 
    public void handle(String requestPath) { 
        class Path { 
            List<String> parts = new ArrayList<String>(); 
            String path = "/"; 
            Path(String path) { 
                if (path == null) return; 
                this.path = path; 
                for (String s : path.split("/")) 
                    if (s.trim().length() > 0) this.parts.add(s); 
            } 
            int size() { return parts.size(); } 
            String get(int i) { return i > this.parts.size() - 1 ? null : this.parts.get(i); } 
            boolean startsWith(String s) { return path.startsWith(s); } 
        } 
 
        Path path = new Path(requestPath); 
 
        if (path.startsWith("/page")) { 
            String pageId = path.get(1); 
            ... 
        } 
        if (path.startsWith("/post")) { 
            String categoryId = path.get(1); 
            String postId = path.get(2); 
            ... 
        } 
        ... 
    } 
} 


// Anonim
    new Thread(new Runnable() {
        public void run() {
            ...
        }
    }).start();



